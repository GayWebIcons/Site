# This is a basic workflow to help you get started with Actions

name: Gay Web Icons Site CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          repository: GayWebIcons/Site
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
          path: site

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          repository: GayWebIcons/Icons
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
          path: icons

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          repository: GayWebIcons/.github
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
          path: github

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        shell: pwsh
        run: |
          Copy-Item -Path icons/README.md -Destination ./site/docs/index.md
          Copy-Item -Path icons/LICENSE.md -Destination ./site/docs/LICENSE.md
          Copy-Item -Path icons/assets -Destination ./site/_site/assets/assets -Recurse
          Copy-Item -Path icons/source-svg -Destination ./site/docs -Recurse
          Copy-Item -Path github/*.* -Destination ./site/docs/
          pip install mkdocs-material
          cd site && mkdocs build

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          # Artifact name
          name: GayWebIcons # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ./site/_site
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error # optional, default is warn
          overwrite: true # optional, default is false

  # Single deploy job since we're just deploying
  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Check out the current repository
      - uses: actions/checkout@v4
        with:
          repository: GayWebIcons/Site
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: GayWebIcons # optional
          path: ./_site # optional
          github-token: ${{ secrets.GITHUB_TOKEN }} # optional

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload just the _site directory
          path: './_site'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
